kinematics:
  incoming_momenta: [[% @for particles initial %]k[%index%][% @if eval index .lt. num_in %], [% @end @if %][%@end @for %]]
  outgoing_momenta: [[% @for particles final %]k[%index%][% @if eval index - num_in .lt. num_out %], [% @end @if %][%@end @for %]]
  momentum_conservation: [k[% num_legs %],[%
@if eval num_legs .gt. num_in %][%
@for particles initial %][%
   @if eval index .lt. num_legs %] + k[%index%][%
   @end @if %][%
@end @for %][%
@for particles final %][%
   @if eval index .lt. num_legs %] - k[%index%][%
   @end @if %][%
@end @for %][%
@else %] -([%
@for particles initial %][%
   @if eval index .lt. num_legs %] + k[%index%][%
   @end @if %][%
@end @for %][%
@for particles final %][%
   @if eval index .lt. num_legs %] - k[%index%][%
   @end @if %][%
@end @for %])[%
@end @if %]]
  kinematic_invariants:[% @for all_masses %]
    - [[% mass %], 1][% @end @for %][% @for mandelstam sym_prefix=es non-zero non-mass %]
    - [[% symbol %], 2][% @end @for %]
  scalarproduct_rules:[%@for mandelstam_subs diagonal upper %]
    - [[k[% index1 %],k[% index2 %]], 0[%
@for mandelstam_subs_rhs %][%
      @select coeff
      @case -1 %] - 1/2 * [%
      @case 1 %] + 1/2 * [%
      @case -2 %] - [%
      @case 2 %] + [%
      @else %][%
         @if eval coeff .gt. 0 %][%
            @if is_first %] [%
            @else %] +[%
            @end @if %] [%coeff%] * [%
         @else %] - [%eval .abs. coeff%]/2 * [%
         @end @if %][%
      @end @select %][%$_%][%
      @if eval exponent .gt. 1 %]^[%exponent%][%
      @end @if %][%
   @end @for %]][%
@end @for %]

