@language form -> fortran90;

@type
	integer = "integer";
	real    = "real(ki)";
	complex = "complex(ki)";
	color   = "complex(ki), dimension(numcs)";
	vector  = "real(ki), dimension(4)";
	cvector = "complex(ki), dimension(4)";
	aux     = "integer";
	aux0    = "complex(ki)";

@coerce
	@int -> integer;
	@int -> real = "(%s.0_ki)";
	@int -> complex = "(%s.0_ki)";
	@int/@int -> real = "(%s.0_ki/%s.0_ki)";
	@int/@int -> complex = "(%s.0_ki/%s.0_ki)";
	real -> complex;
	vector -> cvector;

@operator
	aux * complex -> complex =
		"cond(epspow.eq.%s,%s,Q,mu2)";
	aux * aux0 -> complex = "0.0_ki";
	real * real -> real;
	complex * complex -> complex;
	complex * color -> color;
	vector . vector -> real = "dotproduct(%s, %s)";
	#cvector . vector -> complex = "dotproduct(%s, %s)";
	cvector . vector -> complex =
        "(%1$s(1)*%2$s(1)-%1$s(2)*%2$s(2)-%1$s(3)*%2$s(3)-%1$s(4)*%2$s(4))";
	# cvector . cvector -> complex = "dotproduct(%s, %s)";
	cvector . cvector -> complex =
        "(%1$s(1)*%2$s(1)-%1$s(2)*%2$s(2)-%1$s(3)*%2$s(3)-%1$s(4)*%2$s(4))";

@define[%
	include codegen/model-define.inc class=Model %][% 
	include codegen/haggies-common.inc class=Kinematics %][%
	include codegen/kinematics-define.inc class=Kinematics
%]
	epspow : @int -> aux = "%2$s";

	j : integer -> integer;

	SpSqrt : real -> real = "sqrt(%2$s)";

	Q : cvector;
	Qt2 : real = "mu2";
	Spab3, Spba3 : vector, cvector, vector -> complex;
	spva... : cvector;
	deltaOS : real;
	d : integer, integer -> real;

	# Return type of the diagrams:
	d... : complex;
	p... : complex;
	cf... : color;
	vf... : complex;
	PREFACTOR : complex -> complex = "(%2$s)";
	NULL : aux0 = "(0.0_ki,0.0_ki)";
	EXSYM... : complex;

	qshift : vector;[%

@if internal GENERATE_DERIVATIVES %]
	iv... : integer;
	SUBSCRIPT : cvector, integer -> complex = "%2$s(%3$s)";[%
@end @if %]

@polynomial TR, Qt2, i_, deltaOS;
[% include codegen/model-poly.inc class=Model %]
[% include codegen/kinematics-poly.inc class=Kinematics %][%

@select r2
@case implicit explicit %]
@brackets epspow;
@nobrackets p..., cf..., EXSYM... ;[%
@end @select %]
