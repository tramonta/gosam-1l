# vim: ts=3:sw=3

OBJEXT ?=o
OBJEXTG=[%@if extension autotools %]lo[% @else %]$(OBJEXT)[%@end @if%]
# Module Dependencies:[%
@for each $(OBJEXTG) var=O %][%
   @if generate_nlo_virt %][%
      @select abbrev.level
      @case helicity %]
abbrev.[%O%]: globals.[%O%][%
	      @select r2
			@case implicit explicit off %][%
            @for elements topolopy.keep.virt %]
d[%$_%]l1.[%O%]: abbrev.[%O%][%
            @end @for %][%
			@end @select %][%
      @case group %][%
         @for groups var=grp %]
abbrevg[%grp%].[%O%]: globals.[%O%][%
	         @select r2
   			@case implicit explicit off %][%
               @for diagrams group=grp%]
d[%$_%]l1.[%O%]: abbrevg[%grp%].[%O%][%
               @end @for %][%
				@end @select %][%
         @end @for %][%
      @case diagram %][%
         @for elements topolopy.keep.virt %]
abbrevd[%$_%].[%O%]: globals.[%O%][%
	         @select r2
   			@case implicit explicit off %]
d[%$_%]l1.[%O%]: abbrevd[%$_%].[%O%][% 
            	@if internal GENERATE_DERIVATIVES %]
d[%$_%]l1d.[%O%]: abbrevd[%$_%].[%O%][%
	           @end @if %][%
	      	@end @select %][%
         @end @for %][%
      @end @select %][%

	   @select r2
   	@case implicit explicit off %][%
      	@if extension samurai %]
samurai.[%O%]: [%
         	@for elements topolopy.keep.virt %] \
	d[%$_%]l1.[%O%][%
	         @end @for %][%
   	   @end @if extension samurai %][%

      	@if extension golem95 %]
golem95.[%O%]: [%
         	@for elements topolopy.keep.virt %] \
	d[%$_%]l1.[%O%][%
					@if internal GENERATE_DERIVATIVES
						%] d[%$_%]l1d.[%O%][%
					@end @if %][%
         	@end @for %][%
	      @end @if extension golem95 %][%

      	@if extension ninja %]
ninja.[%O%]: [%
         	@for elements topolopy.keep.virt %] \
	d[%$_%]l1.[%O%] d[%$_%]l131.[%O%] d[%$_%]l132.[%O%] d[%$_%]l121.[%O%][%
		@end @for %][%
@for elements topolopy.keep.virt %]
d[%$_%]l131.[%O%]: abbrevd[%$_%].[%O%]
d[%$_%]l132.[%O%]: abbrevd[%$_%].[%O%]
d[%$_%]l121.[%O%]: abbrevd[%$_%].[%O%][%
	@end @for %][%
	@end @if extension ninja %][%
	@end @select %][%
   @end @if generate_nlo_virt%][%
	@if generate_uv_counterterms %]
diagramsct.[%O%]:[%
     	@for elements topolopy.keep.ct %] \
	d[%$_%]l1c.[%O%][%
		@end @for %][%
	@end @if generate_uv_counterterms %]
amplitude.[%O%]: globals.[%O%][%
	   @select r2
		@case implicit explicit off %][%
	      @if extension samurai %] samurai.[%O%][%
   	   @end @if %][%
	      @if extension golem95 %] golem95.[%O%][%
   	   @end @if %][%
	      @if extension ninja %] ninja.[%O%][%
   	   @end @if %][%
		@end @select %][%
	   @if generate_lo_diagrams %] \
			diagramsl0.[%O%][%
		@end @if %][%
		@if generate_nlo_virt %][%
         @select abbrev.level
         @case helicity %] \
			abbrev.[%O%][%
         @case group %][%
            @for groups var=grp %] \
			abbrevg[%grp%].[%O%][%
            @end @for %][%
         @case diagram %][%
            @for elements topolopy.keep.virt %] \
			abbrevd[%$_%].[%O%][%
            @end @for %][%
         @end @select %][%
      @end @if %][%
			@if generate_uv_counterterms %] \
			diagramsct.[%O%][%
			@end @if %][%
@end @for %][%

@for each $(OBJEXTG) var=O %][%
   @if generate_lo_diagrams %]
[% process_name asprefix=\_ %]diagramsl0.mod: diagramsl0.[%O%][%
   @for elements topolopy.keep.tree %]
[% process_name asprefix=\_ %]d[%$_%]l0.mod: d[%$_%]l0.[%O%][%
   @end @for %][%
   @end @if generate_lo_diagrams %][%
	@select r2
		@case implicit explicit off %][%
			@if extension samurai %]
[% process_name asprefix=\_ %]samurai.mod: samurai.[%O%][%
			@end @if extension samurai %][%

		@if extension golem95 %]
[% process_name asprefix=\_ %]golem95.mod: golem95.[%O%][%
			@end @if extension golem95 %][%

		@if extension ninja %]
[% process_name asprefix=\_ %]ninja.mod: ninja.[%O%] [%
			@for elements topolopy.keep.virt %]
[% process_name asprefix=\_ %]d[%$_%]l131.mod: d[%$_%]l131.[%O%]
[% process_name asprefix=\_ %]d[%$_%]l132.mod: d[%$_%]l132.[%O%]
[% process_name asprefix=\_ %]d[%$_%]l121.mod: d[%$_%]l121.[%O%][%
			@end @for %][%
		@end @if extension ninja %][%
	@end @select %][%
   @if generate_nlo_virt %][%
      @select abbrev.level
      @case helicity %]
[% process_name asprefix=\_ %]abbrev.mod: abbrev.[%O%] [%
      @case group %][%
         @for groups var=grp %]
[% process_name asprefix=\_ %]abbrevg[%grp%].mod: abbrevg[%grp%].[%O%][%
         @end @for %][%
      @case diagram %][%
         @for elements topolopy.keep.virt %]
[% process_name asprefix=\_ %]abbrevd[%$_%].mod: abbrevd[%$_%].[%O%][%
	         @select r2
   			@case implicit explicit off %]
[% process_name asprefix=\_ %]d[%$_%]l1.mod: d[%$_%]l1.[%O%][% 
            	@if internal GENERATE_DERIVATIVES %]
[% process_name asprefix=\_ %]d[%$_%]l1d.mod: d[%$_%]l1d.[%O%][%
	           @end @if %][%
	      	@end @select %][%
         @end @for %][%
      @end @select %][%

   @end @if generate_nlo_virt%][%
	@if generate_uv_counterterms %]
[% process_name asprefix=\_ %]diagramsct.mod: diagramsct.[%O%][%
     	@for elements topolopy.keep.ct %]
[% process_name asprefix=\_ %]d[%$_%]l1c.mod: d[%$_%]l1c.[%O%][%
		@end @for %][%
	@end @if generate_uv_counterterms %]
[% process_name asprefix=\_ %]amplitude.mod: amplitude.[%O%]
[% process_name asprefix=\_ %]globals.mod: globals.[%O%][%
@end @for %]
