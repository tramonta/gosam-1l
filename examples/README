OVERVIEW
========

This file contains a list of processes that has been used to validate
GoSam.

gggg       g(k1)+g(k2) -> g(k3)+g(k4) @ alpha_s^4
           Purely gluonic process without quark-loops, only one helicity.
           Comparison with analytic formula
           Calculation is done using 't Hooft-Veltman

gggg_dred  g(k1)+g(k2) -> g(k3)+g(k4) @ alpha_s^4
           Purely gluonic process without quark-loops, only one helicity.
           Comparison with analytic formula.
           Calculation is done using dim. reduction

gggg_tree  g(k1)+g(k2) -> g(k3)+g(k4) @ alpha_s^2
           Tree-Level only. Includes helicities which are known to be zero.

gggz       g(k1)+g(k2) -> g(k3)+Z(k4) @ alpha_s^3 alpha^1
           This is a loop-induced process.

yyyy       gamma(k1)+gamma(k2) -> gamma(k3)+gamma(k4)
           Comparison with analytic formulae from literature

WpWpjj     u(k1)+d~(k2) -> c~(k3)+s(k4)+e+(k5)+ne(k6)+mu+(k7)+nmu(k8) @ alpha_s^4 alpha^4
           Comparison with single phase space point of arXiv:1007.5313v???

uudd       u(k1)+u~(k2) -> d(k3)+d~(k4) @ alpha_s^4 alpha^0
           Calculation is done using 't Hooft-Veltman

uudd_dred  u(k1)+u~(k2) -> d(k3)+d~(k4) @ alpha_s^4 alpha^0
           Calculation is done using dim. reduction

dgdg       d(k1)+g(k2) -> d(k3)+g(k4) @ alpha_s^4 alpha^0
           Calculation is done using 't Hooft-Veltman

dgdg_dred  d(k1)+g(k2) -> d(k3)+g(k4) @ alpha_s^4 alpha^0
           Calculation is done using dim. reduction

udene      u~(k1)+d(k2) -> e-(k3) + \nu_e~(k4) @ alpha_s^2 alpha^2
           Calculation is done using 't Hooft-Veltman

udene_dred u~(k1)+d(k2) -> e-(k3) + \nu_e~(k4) @ alpha_s^2 alpha^2
           Calculation is done using dim. reduction

udeneg     u~(k1)+d(k2) -> e-(k3) + \nu_e~(k4) + g(k5) @ alpha_s^3 alpha^2
           Calculation is done using 't Hooft-Veltman

udeneg_dred u~(k1)+d(k2) -> e-(k3) + \nu_e~(k4) + g(k5) @ alpha_s^3 alpha^2
           Calculation is done using dim. reduction

uu_graviton_yy
           u + u~ -> Graviton -> gamma + gamma
           Calculation is done in the ADD model (model/LED_UFO) using
           dim. reduction. with a custom propagator for the spin-2 particle
           summing all KK modes.


setup.in.template:
   One can specify options (on top of the usual configuration files)
   for all examples by creating a file setup.in.
   Care has to be taken not to put process specific options into
   that file.

   If no such file exists, only the default values and the values
   from config files are used.

make summarize:
   By running "make summarize" the user obtains a printout of the status
   of all processes for which 'make test' has been run earlier.
   Note that 'make test' is not invoked by this script.

make runtests:
   This command runs 'make test' for all subdirectories.

make runselected:
   This command runs a selection of tests. These tests are
   chosen to cover most features of GoSam.

make check_selection:
   Print a list of the tests in the selection tests.
   Check if they exist or not.

make clean:
   Run 'make very-clean' in every test directory.

make <dirname>:
   Run 'make test' in the directory <dirname>.

HOW TO RUN THE EXAMPLES
=======================

After GoSam has been successfully installed, each example can be run by
executing 'make test' for the respective subdirectory. 'make runtests'
can be invoked to run all tests. 'make summarize.sh' gives a one-line
summary for each test that has been run so far. By setting up the file
'setup.in' (see setup.in.template) one can impose default options for all
tests.

AUTHORS
=======

In case you encounter failing tests, please, contact the authors. Bug reports,
including the corresponding 'ntest/test.log' can be sent to

The GoSam collaboration http://gosam.hepforge.org/
