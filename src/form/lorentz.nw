\documentclass[a4paper,12pt]{amsart}

\usepackage[pdftex]{hyperref}
\usepackage{dsfont}
\usepackage{units}
\usepackage[draft]{remark}

\DeclareMathOperator{\Trace}{tr}
\newcommand{\fmslash}[1]{\ensuremath{/\!\!\!{#1}}}
\newcommand{\pslash}[1][{}]{\fmslash{p}_{#1}}
\newcommand{\qslash}[1][{}]{\fmslash{q}_{#1}}
\newcommand{\kslash}[1][{}]{\fmslash{k}_{#1}}
\newcommand{\tr}[2][{}]{\Trace^{#1}\!\left\{{#2}\right\}}
\newcommand{\form}{{\texttt{Form}}}
\newcommand{\golem}{{\texttt{GOLEM}}}
\newcommand{\bra}[1]{\langle #1 \vert}
\newcommand{\brb}[1]{[ #1 \vert}
\newcommand{\kea}[1]{\vert #1 \rangle}
\newcommand{\keb}[1]{\vert #1 ]}
\newcommand{\Spaa}[1]{\langle #1 \rangle}
\newcommand{\Spab}[1]{\langle #1]}
\newcommand{\Spba}[1]{[ #1 \rangle}
\newcommand{\Spbb}[1]{[ #1 ]}

\renewcommand{\NWtarget}[2]{\hypertarget{#1}{#2}}
\renewcommand{\NWlink}[2]{\hyperlink{#1}{#2}}
\renewcommand{\NWtxtMacroDefBy}{Macro defined by}
\renewcommand{\NWtxtMacroRefIn}{Macro referenced in}
\renewcommand{\NWtxtMacroNoRef}{Macro never referenced}
\renewcommand{\NWtxtDefBy}{Defined by}
\renewcommand{\NWtxtRefIn}{Referenced in}
\renewcommand{\NWtxtNoRef}{Not referenced}
\renewcommand{\NWtxtFileDefBy}{File defined by}
\renewcommand{\NWsep}{${\diamond}$}

\newcommand{\doc}[1]{\paragraph{\hspace{-3em}\sc #1}}

\date{Last updated: \today}
\author{The GoSam Collaboration\\Thomas Reiter}
\title{Representations for Particles up to Spin~$3/2$}
\email{\href{mailto:thomasr@@nikhef.nl}{\nolinkurl{thomasr@@nikhef.nl}}}
\urladdr{\url{http://www.nikhef.nl/~thomasr}}

\makeatletter
\hypersetup{
	pdfauthor={Thomas Reiter / The GoSam Collaboration},
	pdftitle={\@@title},
	pdfsubject={High Energy Physics, Computer Algebra},
	pdfkeywords={Representation, Lorentz Group},
	colorlinks=true,
	pdfborder={0 0 0}
}
\makeatother

\begin{document}
\begin{abstract}
This document describes the implementation of wavefunctions and
propagators in~\golem.
\end{abstract}
\maketitle
\tableofcontents
\section{Global Structure}
%---#[ Global Structure :
The replacements for the wave-functions go into the file \texttt{legs.hh},
propagators are found in \texttt{propagators.hh}. The diagram generator is
expected to yield the following functions:
\begin{description}
\item[\texttt{inplorentz($2s$, $i$, $k$, $m$)}] for each initial state
particle of spin $s$, momentum $k$ and mass $m$. The index $i$ is a
Lorentz index in the corresponding representation which connects the
wave function to the rest of the diagram. In cases where particle and
antiparticle are distinct, the parameter $2s$ is signed ($-2s$ for the
antiparticle).
\item[\texttt{outlorentz($2s$, $i$, $k$, $m$)}] as above,
but for each final state particle.
\item[\texttt{proplorentz($2s$, $k$, $m$, $\Gamma$, $A$, $i_1$, $i_2$)}]
denotes the
Lorentz part of a propagator for a particle of spin $s$, momentum $k$ and
mass $m$. The indices $i_1$ and $i_2$ are corresponding Lorentz indices.
The decay width of the particle is $\Gamma$. The parameter $A$ is a flag
that indicates special properties of a field and is non-zero if the
propagator needs special treatment.
\item[\texttt{inpcolor($n$, $i$)}] for each initial state particle.
Associates the colour index $i$ with the initial state particle number $n$.
This function is not treated in this file.
\item[\texttt{outcolor($n$, $i$)}] for each final state particle.
Associates the colour index $i$ with the finaltial state particle number $n$.
This function is not treated in this file.
\item[\texttt{propcolor($r$, $i_1$, $i_2$)}] denotes the colour part of
a propagator, where $r$ is a representation label; $r$ is
either 1 (trivial rep.), -3 or 3 (fundamental rep.) or 8 (adjoint rep.).
The indices $i_1$ and $i_2$ are the colour indices of that propagator.
\item[\texttt{inp($f$, $k$, [$h$], [$k^\flat$], [$q$])}]
carries the helicity information
$h$ of an initial state particle of the field $f$ and momentum $k$.
For massive gauge
bosons, the parameters $k^\flat$ and $q$ are the two momenta of the
light-cone splitting. For massless gauge the parameter $k^\flat$ is
ommitted.
The parameters $h$, $k^\flat$ and $q$ are not generated
by the diagram generator but added at an earlier point
in the \form\ program.
\item[\texttt{out($f$, $k$, [$h$], [$k^\flat$], [$q$])}]
same as \texttt{inp} but for final state particles.
\end{description}

On the output side we use the symbols introduced by the \texttt{spinney}
library plus the scalar propagator
\begin{equation}
\mathtt{inv}(k, m) = \frac{1}{k^2-m^2+i0^+}\quad\text{and}\quad
\mathtt{inv}(k, m,\Gamma) = \frac{1}{k^2-m^2-im\Gamma+i0^+}
\end{equation}
@d common header
@{* vim: ts=3:sw=3
* This file is generated from lorentz.nw.
* Do not edit this file directly.
* Instead change src/form/lorentz.nw and run make.
@}

@O legs.hh
@{@<common header@>
*---#[ Scalars :
@<scalar wave-functions@>
*---#] Scalars :
*---#[ Spinors :
*---#[   Massless Spinors :
@<wave-functions for massless spinors@>
*---#]   Massless Spinors :
*---#[   Massive Spinors :
@<wave-functions for massive spinors@>
*---#]   Massive Spinors :
*---#] Spinors :
*---#[ Polarisation Vectors for Gauge Bosons :
*---#[    Massless Gauge Bosons :
@<gauge boson wave-functions, light-like@>
*---#]    Massless Gauge Bosons :
*---#[    Massive Gauge Bosons :
@<gauge boson wave-functions, massive@>
*---#]    Massive Gauge Bosons :
*---#] Polarisation Vectors for Gauge Bosons :
*---#[ wave functions for Vector-Spinors :
@_Repeat@_;
   @<vector-spinor wave functions@>
@_EndRepeat@_;
*---#] wave functions for Vector-Spinors :
*---#[ wave functions for gravitons :
@_Repeat@_;
   @<graviton wave functions@>
@_EndRepeat@_;
*---#] wave functions for gravitons :
@}

@O propagators.hh
@{@<common header@>
@<colour part of the propagators@>
*---#[ Scalar Bosons :
@<scalar propagator@>
*---#] Scalar Bosons :
*---#[ Fermions :
@<fermion propagator@>
@<handed fermion propagator@>
*---#] Fermions :
*---#[ Gauge Bosons :
@<gauge boson propagator@>
*---#] Gauge Bosons :
*---#[ Vector-Spinor propagator :
@<vector-spinor propagators@>
*---#] Vector-Spinor propagator :
*---#[ Tensor Bosons :
@_Repeat@_;
   @<tensor ghost propagator@>
   @<graviton propagator@>
   @<graviton effective propagator@>
@_EndRepeat@_;
*---#] Tensor Bosons :
@}

For the Feynman rules we stick to the conventions of~\cite{1}.
%---#] Global Structure :
\section{Spin-0 Particles}
%---#[ Spin-0 Particles :
The wave function of a spin-0 particle is represented by a pure number.
@d scalar wave-functions
@{@_Id@_ inplorentz(0, iv?, k1?, m?) = 1;
@_Id@_ outlorentz(0, iv?, k1?, m?) = 1;@}
Its propagator is just the plain propagator
\begin{equation}
\frac{i}{k^2-m^2-im\Gamma+i0^+}\text{.}
\end{equation}
@d scalar propagator
@{@_Id@_ proplorentz(0, k1?, m?, sDUMMY1?, 0, iv1?, iv2?) =
   PREFACTOR(@_i@__) * inv(k1, m, sDUMMY1);
@_Id@_ proplorentz(0, 0, m?, sDUMMY1?, 0,iv1?, iv2?) =
   PREFACTOR(@_i@__) * inv(ZERO, m, sDUMMY1);@}
%---#] Spin-0 Particles :

\section{Spin-\texorpdfstring{\nicefrac{1}{2}}{1/2} Particles}
%---#[ Spin-1/2 Particles :
For spinor wave functions we have the following assignment in the
notation of~\cite{1}:
\begin{center}
\begin{tabular}{l|cc}
     &     $l^-$, $q$ & $l^+$, $\bar{q}$\\
\hline
initial & $u_\alpha(k, j_3)$ & $\bar{v}_\alpha(k, j_3)$ \\
final & $\bar{u}_\alpha(k, j_3)$ & $v_\alpha(k, j_3)$
\end{tabular}
\end{center}
Here, $l$ and $q$ stand for leptons and quarks respectively.
The index $\alpha$ denotes a spinor index and $j_3$ is the 3-component
of the spin.
We label the states by $j_3=\pm1$ instead of the physical values
$j_3=\pm1/2$.

The propagator both for the massive and the massless case is
\begin{equation}
\frac{i(\kslash + m)_{\alpha\beta}}{k^2-m^2-im\Gamma+i0^+}
\end{equation}
where the momentum flow is from $\beta$ to $\alpha$.
@d fermion propagator
@{@_Id@_ proplorentz(1, k1?, m?, sDUMMY1?, 0, iv1?, iv2?) =
  PREFACTOR(@_i@__) * (NCContainer(Sm(k1), iv2, iv1)
   + csqrt(m*(m-@_i@__*sDUMMY1)) * NCContainer(1, iv2, iv1)
  ) * inv(k1, m, sDUMMY1);
@_Id@_ proplorentz(1, 0, m?, sDUMMY1?, 0, iv1?, iv2?) =
   + PREFACTOR(@_i@__ * csqrt(m*(m-@_i@__*sDUMMY1))) * NCContainer(1, iv2, iv1) * inv(ZERO, m, sDUMMY1);@}

For massless fermions,
the auxilliary field can also have values $1$ and $-1$ for
left- and right-handed particles. This follows the CalcHEP convention.
\begin{center}
\begin{tabular}{rlc}
Golem & CalcHEP & Expression\\
\hline
$+1$ & `L' & $\frac{\pslash\Pi_+}{p^2}$ \\
$-1$ & `R' & $\frac{\pslash\Pi_-}{p^2}$
\end{tabular}
\end{center}

@d handed fermion propagator
@{@_Id@_ proplorentz(1, k1?, 0, 0, 1, iv1?, iv2?) =
  PREFACTOR(@_i@__) * NCContainer(Sm(k1)*ProjPlus, iv2, iv1) * inv(k1, 0);
@_Id@_ proplorentz(1, k1?, 0, 0, -1, iv1?, iv2?) =
  PREFACTOR(@_i@__) * NCContainer(Sm(k1)*ProjMinus, iv2, iv1) * inv(k1, 0);@}

\subsection{Massless Case}
%---#[   Massless Spin-1/2 Particles :
For massless spinors we translate the spin states directly into
helicity eigenstates as follows\footnote{Please, refer to the
\texttt{spinney} documentation for notational conventions of
bra- and ket-spinors.}:
\begin{subequations}
\begin{align}
u_\alpha(k, +1) &= \kea{k} & \bar{u}_\alpha(k, +1) &= \brb{k}
\label{eq:m0spinors:1}\\
u_\alpha(k, -1) &= \keb{k} & \bar{u}_\alpha(k, -1) &= \bra{k}
\label{eq:m0spinors:2}\\
v_\alpha(k, +1) &= \keb{k} & \bar{v}_\alpha(k, +1) &= \bra{k}
\label{eq:m0spinors:3}\\
v_\alpha(k, -1) &= \kea{k} & \bar{v}_\alpha(k, -1) &= \brb{k}
\label{eq:m0spinors:4}
\end{align}
\end{subequations}
@d wave-functions for massless spinors
@{@<implementation of Equation~\eqref{eq:m0spinors:1}@>
@<implementation of Equation~\eqref{eq:m0spinors:2}@>
@<implementation of Equation~\eqref{eq:m0spinors:3}@>
@<implementation of Equation~\eqref{eq:m0spinors:4}@>@}

@d implementation of Equation~\eqref{eq:m0spinors:1}
@{@_Id@_ inplorentz( 1, iv?, k1?, 0) *
      inp(field1?, k1?,  1) =
   NCContainer(USpa(k1), iv);
@_Id@_ outlorentz( 1, iv?, k1?, 0) *
      out(field1?, k1?,  1) =
   NCContainer(UbarSpb(k1), iv);@}

@d implementation of Equation~\eqref{eq:m0spinors:2}
@{@_Id@_ inplorentz( 1, iv?, k1?, 0) *
      inp(field1?, k1?, -1) =
   NCContainer(USpb(k1), iv);
@_Id@_ outlorentz( 1, iv?, k1?, 0) *
      out(field1?, k1?, -1) =
   NCContainer(UbarSpa(k1), iv);@}

@d implementation of Equation~\eqref{eq:m0spinors:3}
@{@_Id@_ outlorentz(-1, iv?, k1?, 0) *
      out(field1?, k1?,  1) =
   NCContainer(USpb(k1), iv);
@_Id@_ inplorentz(-1, iv?, k1?, 0) *
      inp(field1?, k1?,  1) =
   NCContainer(UbarSpa(k1), iv);@}

@d implementation of Equation~\eqref{eq:m0spinors:4}
@{@_Id@_ outlorentz(-1, iv?, k1?, 0) *
      out(field1?, k1?, -1) =
   NCContainer(USpa(k1), iv);
@_Id@_ inplorentz(-1, iv?, k1?, 0) *
      inp(field1?, k1?, -1) =
   NCContainer(UbarSpb(k1), iv);@}

%---#]   Massless Spin-1/2 Particles :
\subsection{Massive Case}
%---#[   Massive Spin-1/2 Particles :
Massive spinors translate to spinney notation in the following
sense:
\begin{subequations}
\begin{align}
u_\alpha(k, +1) &= \kea{k^+} & \bar{u}_\alpha(k, +1) &= \brb{k^+}
\label{eq:Mspinors:1}\\
u_\alpha(k, -1) &= \keb{k^+} & \bar{u}_\alpha(k, -1) &= \bra{k^+}
\label{eq:Mspinors:2}\\
v_\alpha(k, +1) &= \keb{k^-} & \bar{v}_\alpha(k, +1) &= \bra{k^-}
\label{eq:Mspinors:3}\\
v_\alpha(k, -1) &= \kea{k^-} & \bar{v}_\alpha(k, -1) &= \brb{k^-}
\label{eq:Mspinors:4}
\end{align}
\end{subequations}
@d wave-functions for massive spinors
@{@<implementation of Equation~\eqref{eq:Mspinors:1}@>
@<implementation of Equation~\eqref{eq:Mspinors:2}@>
@<implementation of Equation~\eqref{eq:Mspinors:3}@>
@<implementation of Equation~\eqref{eq:Mspinors:4}@>@}

@d implementation of Equation~\eqref{eq:Mspinors:1}
@{@_Id@_ inplorentz( 1, iv?, k1?, m?) *
      inp(field1?, k1?,  1) =
   NCContainer(USpa(k1, +1), iv);
@_Id@_ outlorentz( 1, iv?, k1?, m?) *
      out(field1?, k1?,  1) =
   NCContainer(UbarSpb(k1, +1), iv);@}

@d implementation of Equation~\eqref{eq:Mspinors:2}
@{@_Id@_ inplorentz( 1, iv?, k1?, m?) *
      inp(field1?, k1?, -1) =
   NCContainer(USpb(k1, +1), iv);
@_Id@_ outlorentz( 1, iv?, k1?, m?) *
      out(field1?, k1?, -1) =
   NCContainer(UbarSpa(k1, +1), iv);@}

@d implementation of Equation~\eqref{eq:Mspinors:3}
@{@_Id@_ outlorentz(-1, iv?, k1?, m?) *
      out(field1?, k1?,  1) =
   NCContainer(USpb(k1, -1), iv);
@_Id@_ inplorentz(-1, iv?, k1?, m?) *
      inp(field1?, k1?,  1) =
   NCContainer(UbarSpa(k1, -1), iv);@}

@d implementation of Equation~\eqref{eq:Mspinors:4}
@{@_Id@_ outlorentz(-1, iv?, k1?, m?) *
      out(field1?, k1?, -1) =
   NCContainer(USpa(k1, -1), iv);
@_Id@_ inplorentz(-1, iv?, k1?, m?) *
      inp(field1?, k1?, -1) =
   NCContainer(UbarSpb(k1, -1), iv);@}

%---#]   Massive Spin-1/2 Particles :
%---#] Spin-1/2 Particles :
\section{Spin-1 Particles}
%---#[ Spin-1 Particles :
For ingoing gauge bosons we use the polarisation vector
$\varepsilon_\mu(k, j_3)$, and for outgoing particles its
conjugate $\varepsilon_\mu^\ast(k, j_3)$ in accordance with the
notation of~\cite{1}. For internal particles we work in Feynman gauge
and hence get the propagator
\begin{equation}
\frac{-ig^{\mu\nu}}{k^2-m^2-im\Gamma+i0^+}\text{.}
\end{equation}
@d gauge boson propagator
@{@_Id@_ proplorentz(2, k1?, m?, sDUMMY1?, 0, iv1?, iv2?) =
   - PREFACTOR(@_i@__) * d(iv1, iv2) * inv(k1, m, sDUMMY1);
@_Id@_ proplorentz(2, 0, m?, sDUMMY1?, 0, iv1?, iv2?) =
   - PREFACTOR(@_i@__) * d(iv1, iv2) * inv(ZERO, m, sDUMMY1);@}

\subsection{Massless Case}
%---#[   Massless Case :
We represent massless gauge bosons in the way proposed by~\cite{Xu},
\begin{align}
\varepsilon_\mu(k, +1) &= \frac{\Spab{q\vert\gamma_\mu\vert k}}{%
   \sqrt{2}\Spaa{qk}}\\
\varepsilon_\mu(k, -1) &= \frac{\Spba{q\vert\gamma_\mu\vert k}}{%
   \sqrt{2}\Spbb{kq}}
\end{align}
which requires an arbitrary, light-like auxilliary vector $q$. It
follows that in this representation
\begin{equation}\label{eq:polarisation-conjugate}
\left(\varepsilon_\mu(k,\pm1)\right)^\ast = \varepsilon_\mu(k,\mp1)\text{.}
\end{equation}

Below we implement the above expressions with the notation
$k=\mathtt{k1}$, $q=\mathtt{vDUMMY1}$ and $\mu=\mathtt{ivL2}$.
@d expression for $\varepsilon(k, +1)$
@{1/sqrt2 * SpDenominator(Spa2(vDUMMY1, k1)) *
	UbarSpa(vDUMMY1) * Sm(ivL2) * USpb(k1)@}
@d expression for $\varepsilon(k, -1)$
@{1/sqrt2 * SpDenominator(Spb2(k1, vDUMMY1)) *
	UbarSpb(vDUMMY1) * Sm(ivL2) * USpa(k1)@}
Using Equation~\eqref{eq:polarisation-conjugate} we can also
define macros for the conjugate vectors
@d expression for $\varepsilon^\ast(k, +1)$
@{@<expression for $\varepsilon(k, -1)$@>@}
@d expression for $\varepsilon^\ast(k, -1)$
@{@<expression for $\varepsilon(k, +1)$@>@}


The usual properties for polarisation vectors are easy to prove. The
polarisation vector is transverse both to $k$ and $q$:
\begin{align}
\varepsilon(k, j_3)\cdot k &= 0\text{,}\\
\varepsilon(k, j_3)\cdot q &= 0\text{.}
\end{align}

The polarisation vectors fulfill the completeness relation of an
axial gauge,
\begin{equation}
\sum_{j_3=\pm1}\varepsilon^\mu(k, j_3)%
\left(\varepsilon^\nu(k, j_3)\right)^\ast=
-g^{\mu\nu}+\frac{k^\mu q^\nu+k^\nu q^\mu}{k\cdot q}\text{.}
\end{equation}

By making use of the Schouten identity one can show that a change
of the auxilliary vector $q\rightarrow p$ amounts to a term
proportional to $k_\mu$,
\begin{subequations}
\begin{align}
\frac{\Spab{q\vert\gamma_\mu\vert k}}{%
   \sqrt{2}\Spaa{qk}}
&=\frac{\Spab{p\vert\gamma_\mu\vert k}}{%
   \sqrt{2}\Spaa{pk}}+
\frac{\sqrt{2}\Spaa{pq}}{\Spaa{pk}\Spaa{qk}}k_\mu\\
\frac{\Spba{q\vert\gamma_\mu\vert k}}{%
   \sqrt{2}\Spbb{kq}}
&=\frac{\Spba{p\vert\gamma_\mu\vert k}}{%
   \sqrt{2}\Spbb{kp}}+
\frac{\sqrt{2}\Spbb{qp}}{\Spbb{kp}\Spbb{kq}}k_\mu
\end{align}
\end{subequations}

@d gauge boson wave-functions, light-like
@{@_Id@_ outlorentz(2, ivL2?, k1?, 0) *
      out(field1?, k1?,  1, vDUMMY1?) =
   @<expression for $\varepsilon^\ast(k, +1)$@>;
@_Id@_ outlorentz(2, ivL2?, k1?, 0) *
      out(field1?, k1?, -1, vDUMMY1?) =
   @<expression for $\varepsilon^\ast(k, -1)$@>;
@_Id@_ inplorentz(2, ivL2?, k1?, 0) *
      inp(field1?, k1?,  1, vDUMMY1?) =
   @<expression for $\varepsilon(k, +1)$@>;
@_Id@_ inplorentz(2, ivL2?, k1?, 0) *
      inp(field1?, k1?, -1, vDUMMY1?) =
   @<expression for $\varepsilon(k, -1)$@>;@}
%---#]   Massless Case :
\subsection{Massive Case}
%---#[   Massive Case :
For the polarisation vectors of massive gauge bosons, where $k^2=m^2$,
we require\footnote{See for example Appendix A{.}1{.}1{.}6 of \cite{1}.}
\begin{align}
&\varepsilon(k, j_3)\cdot k = 0 & &\text{transverality,}\\
&\varepsilon(k, j_3)\cdot \varepsilon(k, j_3^\prime)=-\delta_{j_3j_3^\prime}&
&\text{orthonormality and}\\
&\sum_{j_3=-1}^1\varepsilon_\mu(k, j_3)\left(\varepsilon_\nu(k, j_3)\right)^\ast
=-g^{\mu\nu}+\frac{k^\mu k^\nu}{m^2}& &\text{completeness.}
\end{align}

We choose a representation based on the splitting of
the momentum $k$ into a pair of light-like vector $k^\flat$ and $q$,
as it is implemented in the \texttt{spinney} procedure
\texttt{SpLightConeDecomposition}.
\begin{equation}
k=k^\flat+\frac{m^2}{2k^\flat\cdot q}q
\end{equation}
Similarly to the massless case, two of the polarisations can be chosen
as
\begin{align}
\varepsilon_\mu(k, +1) &= \frac{\Spab{q\vert\gamma_\mu\vert k^\flat}}{%
   \sqrt{2}\Spaa{qk^\flat}}\quad\text{and}\\
\varepsilon_\mu(k, -1) &= \frac{\Spba{q\vert\gamma_\mu\vert k^\flat}}{%
   \sqrt{2}\Spbb{k^\flat q}}\text{.}
\end{align}
As before, these vectors have the property that they are complex
conjugate to each other.
The third polarisation vector is
\begin{equation}
\varepsilon_\mu(k, 0) = \frac{1}{m}\left(k^\flat_\mu
-\frac{m^2}{2k^\flat\cdot q}q_\mu\right)=
\frac{1}{m}\left(2k^\flat_\nu-k_\nu\right)\text{.}
\end{equation}

In the implementation we have $\mu=\mathtt{ivL2}$, $k=\mathtt{k1}$,
$k^\flat=\mathtt{k2}$ and $q=\mathtt{k3}$.
@d expression for massive $\varepsilon(k, +1)$
@{(1/sqrt2 * SpDenominator(Spa2(k3, k2))) *
   UbarSpa(k3) * Sm(ivL2) * USpb(k2)@}
@d expression for massive $\varepsilon(k, -1)$
@{(1/sqrt2 * SpDenominator(Spb2(k2, k3))) *
   UbarSpb(k3) * Sm(ivL2) * USpa(k2)@}
@d expression for massive $\varepsilon(k, 0)$
@{(1/m) * (k2(ivL2) - m * SpDenominator(Spa2(k2,k3)) *
   m * SpDenominator(Spb2(k3,k2)) * k3(ivL2))@}

The conjugate polarisation vectors are as follows.
@d expression for massive $\varepsilon^\ast(k, +1)$
@{@<expression for massive $\varepsilon(k, -1)$@>@}
@d expression for massive $\varepsilon^\ast(k, -1)$
@{@<expression for massive $\varepsilon(k, +1)$@>@}
@d expression for massive $\varepsilon^\ast(k, 0)$
@{@<expression for massive $\varepsilon(k, 0)$@>@}

Finally, we can express all six possibilities of initial state
and final state polarisation vectors:
@D gauge boson wave-functions, massive
@{@_Id@_ outlorentz(2, ivL2?, k1?, m?) *
      out(field1?, k1?,  1, k2?, k3?) =
   @<expression for massive $\varepsilon^\ast(k, +1)$@>;
@_Id@_ outlorentz(2, ivL2?, k1?, m?) *
      out(field1?, k1?, -1, k2?, k3?) =
   @<expression for massive $\varepsilon^\ast(k, -1)$@>;
@_Id@_ outlorentz(2, ivL2?, k1?, m?) *
      out(field1?, k1?,  0, k2?, k3?) =
   @<expression for massive $\varepsilon^\ast(k, 0)$@>;
@_Id@_ inplorentz(2, ivL2?, k1?, m?) *
      inp(field1?, k1?,  1, k2?, k3?) =
   @<expression for massive $\varepsilon(k, +1)$@>;
@_Id@_ inplorentz(2, ivL2?, k1?, m?) *
      inp(field1?, k1?, -1, k2?, k3?) =
   @<expression for massive $\varepsilon(k, -1)$@>;
@_Id@_ inplorentz(2, ivL2?, k1?, m?) *
      inp(field1?, k1?,  0, k2?, k3?) =
   @<expression for massive $\varepsilon(k, 0)$@>;@}

\TODO{}\textit{In cases where no massless vectors are in the process
\golem\ chooses the procedure \texttt{SpLightConeSplitting} where a pair
of massive vectors $P$, $Q$ is split into a pair of light-like vectors
$p$, $q$. The corresponding formul\ae\ for polarisation vectors have to
be worked out. Since this case is for very specific processes only we
leave this for the future.}

%---#]   Massive Case :
%---#] Spin-1 Particles :

\section{Spin-\texorpdfstring{$\frac32$}{3/2} Particles}
%---#[ Spin-3/2 Particles:
For the implementation of massive Spin-$\frac32$ fields we
follow~\cite{Kilian:2007gr}.

The projector is
\begin{equation}
\Pi^{\mu\nu}=\left(\fmslash{p}+m\right)
\left(\frac{p^\mu p^\nu}{m^2}-g^{\mu\nu}\right)-\frac13
\left(\gamma^\mu+\frac{k^\mu}{m}\right)
\left(\fmslash{k}-m\right)
\left(\gamma^\nu+\frac{k^\nu}{m}\right)\text{.}
\end{equation}
@d vector-spinor propagators
@{@_Repeat@_;
   @_Id@_ @_once@_ proplorentz(3, k1?, m?, sDUMMY1?, 0, iv1?, iv2?) =
      PREFACTOR(@_i@__) *
      SplitLorentzIndex(iv1, iv1L2, iv1L1) *
      SplitLorentzIndex(iv2, iv2L2, iv2L1) * 1/3 * (
         + 4*k1(iv1L2)*k1(iv2L2)/csqrt(m*(m-i_*sDUMMY1))
         - 3*d(iv1L2,iv2L2)*csqrt(m*(m-i_*sDUMMY1))
         + 2*NCContainer(Sm(k1),iv1L1,iv2L1)*k1(iv1L2)*k1(iv2L2)/csqrt(m*(m-i_*sDUMMY1))^2
         - 3*NCContainer(Sm(k1),iv1L1,iv2L1)*d(iv1L2,iv2L2)
         - NCContainer(Sm(k1)*Sm(iv2L2),iv1L1,iv2L1)*k1(iv1L2)/csqrt(m*(m-i_*sDUMMY1))
         + NCContainer(Sm(iv1L2),iv1L1,iv2L1)*k1(iv2L2)
         - NCContainer(Sm(iv1L2)*Sm(k1),iv1L1,iv2L1)*k1(iv2L2)/csqrt(m*(m-i_*sDUMMY1))
         - NCContainer(Sm(iv1L2)*Sm(k1)*Sm(iv2L2),iv1L1,iv2L1)
         + NCContainer(Sm(iv1L2)*Sm(iv2L2),iv1L1,iv2L1)*csqrt(m*(m-i_*sDUMMY1))
         + NCContainer(Sm(iv2L2),iv1L1,iv2L1)*k1(iv1L2)
      ) * inv(k1, m, sDUMMY1);
   Sum iv1L2, iv1L1, iv2L2, iv2L1;
@_EndRepeat@_;
@_Repeat@_;
   @_Id@_ @_once@_ proplorentz(3, k1?, m?, 0, 0, iv1?, iv2?) =
      PREFACTOR(@_i@__) *
      SplitLorentzIndex(iv1, iv1L2, iv1L1) *
      SplitLorentzIndex(iv2, iv2L2, iv2L1) * 1/3 * (
         + 4*k1(iv1L2)*k1(iv2L2)/m
         - 3*d(iv1L2,iv2L2)*m
         + 2*NCContainer(Sm(k1),iv1L1,iv2L1)*k1(iv1L2)*k1(iv2L2)/m^2
         - 3*NCContainer(Sm(k1),iv1L1,iv2L1)*d(iv1L2,iv2L2)
         - NCContainer(Sm(k1)*Sm(iv2L2),iv1L1,iv2L1)*k1(iv1L2)/m
         + NCContainer(Sm(iv1L2),iv1L1,iv2L1)*k1(iv2L2)
         - NCContainer(Sm(iv1L2)*Sm(k1),iv1L1,iv2L1)*k1(iv2L2)/m
         - NCContainer(Sm(iv1L2)*Sm(k1)*Sm(iv2L2),iv1L1,iv2L1)
         + NCContainer(Sm(iv1L2)*Sm(iv2L2),iv1L1,iv2L1)*m
         + NCContainer(Sm(iv2L2),iv1L1,iv2L1)*k1(iv1L2)
      ) * inv(k1, m, 0);
   @_Sum@_ iv1L2, iv1L1, iv2L2, iv2L1;
@_EndRepeat@_;@}

A set of eigenvectors is provided by the following five states:
\begin{eqnarray}
\epsilon^\mu_{+3/2}(p) &=& \epsilon^\mu_+(p)\epsilon_+(p)\\
\epsilon^\mu_{+1/2}(p) &=&
   \frac1{\sqrt{3}}\epsilon^\mu_+(p)\epsilon_-(p)
  +\sqrt{\frac23}\epsilon^\mu_0(p)\epsilon_+(p) \\
\epsilon^\mu_{-1/2}(p) &=&
   \frac1{\sqrt{3}}\epsilon^\mu_-(p)\epsilon_+(p)
  +\sqrt{\frac23}\epsilon^\mu_0(p)\epsilon_-(p) \\
\epsilon^\mu_{-3/2}(p) &=& \epsilon^\mu_-(p)\epsilon_-(p)
\end{eqnarray}

There are sixteen different cases
\begin{itemize}
\item in-/outgoing
\item particle/anti-particle
\item polarisation $-\frac32, -\frac12, \frac12, \frac32$
\end{itemize}

@d vector-spinor wave functions
@{@<ingoing vector-spinor particle@>
@<ingoing vector-spinor anti-particle@>
@<outgoing vector-spinor particle@>
@<outgoing vector-spinor anti-particle@>@}

@d ingoing vector-spinor particle
@{@_Id@_ @_once@_ inplorentz(3, ivL?, k1?, m?!{0,}) *
      inp(field1?, k1?, -2, k2?, k3?) =
   SplitLorentzIndex(ivL, ivL2, ivL1) *
   @<expression for massive $\varepsilon(k, -1)$@> *
   NCContainer(USpb(k1,+1), ivL1);
   @_Sum@_ ivL2, ivL1;
@_Id@_ @_once@_ inplorentz(3, ivL?, k1?, m?!{0,}) *
      inp(field1?, k1?, -1, k2?, k3?) = 1/sqrt3 *
   SplitLorentzIndex(ivL, ivL2, ivL1) * (
   + @<expression for massive $\varepsilon(k, -1)$@> *
     NCContainer(USpa(k1,+1), ivL1)
   + sqrt2 * @<expression for massive $\varepsilon(k, 0)$@> *
     NCContainer(USpb(k1,+1), ivL1));
   @_Sum@_ ivL2, ivL1;
@_Id@_ @_once@_ inplorentz(3, ivL?, k1?, m?!{0,}) *
      inp(field1?, k1?, +1, k2?, k3?) = 1/sqrt3 *
   SplitLorentzIndex(ivL, ivL2, ivL1) * (
   + @<expression for massive $\varepsilon(k, +1)$@> *
     NCContainer(USpb(k1,+1), ivL1)
   + sqrt2 * @<expression for massive $\varepsilon(k, 0)$@> *
     NCContainer(USpa(k1,+1), ivL1));
   @_Sum@_ ivL2, ivL1;
@_Id@_ @_once@_ inplorentz(3, ivL?, k1?, m?!{0,}) *
      inp(field1?, k1?, +2, k2?, k3?) =
   SplitLorentzIndex(ivL, ivL2, ivL1) *
   @<expression for massive $\varepsilon(k, +1)$@> *
   NCContainer(USpa(k1,+1), ivL1);
   @_Sum@_ ivL2, ivL1;
@}

@d ingoing vector-spinor anti-particle
@{@_Id@_ @_once@_ inplorentz(-3, ivL?, k1?, m?!{0,}) *
      inp(field1?, k1?, -2, k2?, k3?) =
   SplitLorentzIndex(ivL, ivL2, ivL1) *
   @<expression for massive $\varepsilon(k, -1)$@> *
   NCContainer(UbarSpb(k1,-1), ivL1);
   @_Sum@_ ivL2, ivL1;
@_Id@_ @_once@_ inplorentz(-3, ivL?, k1?, m?!{0,}) *
      inp(field1?, k1?, -1, k2?, k3?) = 1/sqrt3 *
   SplitLorentzIndex(ivL, ivL2, ivL1) * (
   + @<expression for massive $\varepsilon(k, -1)$@> *
     NCContainer(UbarSpa(k1,-1), ivL1)
   + sqrt2 * @<expression for massive $\varepsilon(k, 0)$@> *
     NCContainer(UbarSpb(k1,-1), ivL1));
   @_Sum@_ ivL2, ivL1;
@_Id@_ @_once@_ inplorentz(-3, ivL?, k1?, m?!{0,}) *
      inp(field1?, k1?, +1, k2?, k3?) = 1/sqrt3 *
   SplitLorentzIndex(ivL, ivL2, ivL1) * (
   + @<expression for massive $\varepsilon(k, +1)$@> *
     NCContainer(UbarSpb(k1,-1), ivL1)
   + sqrt2 * @<expression for massive $\varepsilon(k, 0)$@> *
     NCContainer(UbarSpa(k1,-1), ivL1));
   @_Sum@_ ivL2, ivL1;
@_Id@_ @_once@_ inplorentz(-3, ivL?, k1?, m?!{0,}) *
      inp(field1?, k1?, +2, k2?, k3?) =
   SplitLorentzIndex(ivL, ivL2, ivL1) *
   @<expression for massive $\varepsilon(k, +1)$@> *
   NCContainer(UbarSpa(k1,-1), ivL1);
   @_Sum@_ ivL2, ivL1;
@}

@d outgoing vector-spinor particle
@{@_Id@_ @_once@_ inplorentz(3, ivL?, k1?, m?!{0,}) *
      inp(field1?, k1?, -2, k2?, k3?) =
   SplitLorentzIndex(ivL, ivL2, ivL1) *
   @<expression for massive $\varepsilon^\ast(k, -1)$@> *
   NCContainer(UbarSpa(k1,+1), ivL1);
   @_Sum@_ ivL2, ivL1;
@_Id@_ @_once@_ inplorentz(3, ivL?, k1?, m?!{0,}) *
      inp(field1?, k1?, -1, k2?, k3?) = 1/sqrt3 *
   SplitLorentzIndex(ivL, ivL2, ivL1) * (
   + @<expression for massive $\varepsilon^\ast(k, -1)$@> *
     NCContainer(UbarSpb(k1,+1), ivL1)
   + sqrt2 * @<expression for massive $\varepsilon^\ast(k, 0)$@> *
     NCContainer(UbarSpa(k1,+1), ivL1));
   @_Sum@_ ivL2, ivL1;
@_Id@_ @_once@_ inplorentz(3, ivL?, k1?, m?!{0,}) *
      inp(field1?, k1?, +1, k2?, k3?) = 1/sqrt3 *
   SplitLorentzIndex(ivL, ivL2, ivL1) * (
   + @<expression for massive $\varepsilon^\ast(k, +1)$@> *
     NCContainer(UbarSpa(k1,+1), ivL1)
   + sqrt2 * @<expression for massive $\varepsilon^\ast(k, 0)$@> *
     NCContainer(UbarSpb(k1,+1), ivL1));
   @_Sum@_ ivL2, ivL1;
@_Id@_ @_once@_ inplorentz(3, ivL?, k1?, m?!{0,}) *
      inp(field1?, k1?, +2, k2?, k3?) =
   SplitLorentzIndex(ivL, ivL2, ivL1) *
   @<expression for massive $\varepsilon^\ast(k, +1)$@> *
   NCContainer(UbarSpb(k1,+1), ivL1);
   @_Sum@_ ivL2, ivL1;
@}

@d outgoing vector-spinor anti-particle
@{@_Id@_ @_once@_ inplorentz(3, ivL?, k1?, m?!{0,}) *
      inp(field1?, k1?, -2, k2?, k3?) =
   SplitLorentzIndex(ivL, ivL2, ivL1) *
   @<expression for massive $\varepsilon^\ast(k, -1)$@> *
   NCContainer(USpa(k1,-1), ivL1);
   @_Sum@_ ivL2, ivL1;
@_Id@_ @_once@_ inplorentz(3, ivL?, k1?, m?!{0,}) *
      inp(field1?, k1?, -1, k2?, k3?) = 1/sqrt3 *
   SplitLorentzIndex(ivL, ivL2, ivL1) * (
   + @<expression for massive $\varepsilon^\ast(k, -1)$@> *
     NCContainer(USpb(k1,-1), ivL1)
   + sqrt2 * @<expression for massive $\varepsilon^\ast(k, 0)$@> *
     NCContainer(USpa(k1,-1), ivL1));
   @_Sum@_ ivL2, ivL1;
@_Id@_ @_once@_ inplorentz(3, ivL?, k1?, m?!{0,}) *
      inp(field1?, k1?, +1, k2?, k3?) = 1/sqrt3 *
   SplitLorentzIndex(ivL, ivL2, ivL1) * (
   + @<expression for massive $\varepsilon^\ast(k, +1)$@> *
     NCContainer(USpa(k1,-1), ivL1)
   + sqrt2 * @<expression for massive $\varepsilon^\ast(k, 0)$@> *
     NCContainer(USpb(k1,-1), ivL1));
   @_Sum@_ ivL2, ivL1;
@_Id@_ @_once@_ inplorentz(3, ivL?, k1?, m?!{0,}) *
      inp(field1?, k1?, +2, k2?, k3?) =
   SplitLorentzIndex(ivL, ivL2, ivL1) *
   @<expression for massive $\varepsilon^\ast(k, +1)$@> *
   NCContainer(USpb(k1,-1), ivL1);
   @_Sum@_ ivL2, ivL1;
@}
%---#] Spin-3/2 Particles:

\section{Spin-2 Particles}
\subsection{Tensor Structure}
In order to map the pair of Lorentz indices into a single Multi-Index
we use the function \texttt{SplitLorentzIndex}; the first argument denotes
the multi-index, the second and the last argument are the two Lorentz indices.
%---#[ Spin-2 Particles:
\subsection{Tensor Ghost}
The CalcHEP way of treating colour requires the introduction of
the so-called \textit{tensor ghost}. This auxilliary field is introduced
in order to split the four-gluon vertex into a pair of gluon-gluon-ghost
vertices. The propagator therefore is not dynamical and has the form
\begin{equation}
P(T^{\mu_1\nu_1}(p_1),T^{\mu_2\nu_2}(p_2))=-ig^{\mu_1\mu_2}g^{\nu_1\nu_2}
\end{equation}
Tensor ghosts are indicated by having an auxilliary field value of~1.
@d tensor ghost propagator
@{@_Id@_ @_once@_ proplorentz(4, k1?, m?, sDUMMY1?, 1, iv1?, iv2?) =
   - PREFACTOR(@_i@__) *
     SplitLorentzIndex(iv1, iv1a, iv1b) *
     SplitLorentzIndex(iv2, iv2a, iv2b) *
     d(iv1a, iv2a) * d(iv1b, iv2b);
@_Sum@_ iv1a, iv1b, iv2a, iv2b;@}

\subsection{Gravitons}

\begin{eqnarray}
\Pi^{\mu\nu,\alpha\beta}(p)&=&
\frac12 \left(g^{\mu\alpha}- \frac{p^\mu p^\alpha}{m^2} \right) \left(g^{\nu\beta}- \frac{p^\nu p^\beta}{m^2} \right)   \nonumber  \\
		    &+& \frac12  \left(g^{\mu\beta}- \frac{p^\mu p^\beta}{m^2} \right) \left(g^{\nu\alpha}- \frac{p^\nu p^\alpha}{m^2} \right)
     \nonumber  \\
      &-&\frac{1}{3} \left(g^{\mu\nu}- \frac{p^\mu p^\nu}{m^2} \right) \left(g^{\alpha\beta}- \frac{p^\alpha p^\beta}{m^2} \right)
\end{eqnarray}

@d graviton propagator
@{@_Id@_ @_once@_ proplorentz(4, k1?, m?, sDUMMY1?, 0, iv1?, iv2?) =
   SplitLorentzIndex(iv1, iv1a, iv1b) *
   SplitLorentzIndex(iv2, iv2a, iv2b) *
   (
        + 1/2 * (
                + (d_(iv1a, iv2a) - k1(iv1a)*k1(iv2a)/m^2) *
                  (d_(iv1b, iv2b) - k1(iv1b)*k1(iv2b)/m^2)
                + (d_(iv1a, iv2b) - k1(iv1a)*k1(iv2b)/m^2) *
                  (d_(iv1b, iv2a) - k1(iv1b)*k1(iv2a)/m^2)
        )
        - 1/3 * (
                + (d_(iv1a, iv1b) - k1(iv1a)*k1(iv1b)/m^2) *
                  (d_(iv2a, iv2b) - k1(iv2a)*k1(iv2b)/m^2)
        )
   ) * inv(k1, m, sDUMMY1);
@}



\begin{eqnarray}
\epsilon^{\mu\nu}_{\pm2}(p) &=& \epsilon_\pm^\mu(p)\epsilon_\pm^\nu(p)\\
\epsilon^{\mu\nu}_{\pm1}(p) &=& \frac1{\sqrt2}\left(
	\epsilon_\pm^\mu(p)\epsilon_0^\nu(p)
       +\epsilon_\pm^\nu(p)\epsilon_0^\mu(p)\right)\\
\epsilon^{\mu\nu}_0(p) &=&\frac1{\sqrt6}\left(
        \epsilon_+^\mu(p)\epsilon_-^\nu(p)
       +\epsilon_-^\mu(p)\epsilon_+^\nu(p)
       +2\epsilon_0^\mu(p)\epsilon_0^\nu(p)\right)
\end{eqnarray}


There is the possibility, to have custom propagators for Spin-2 particles.
This is especially needed for the sum over KK modes in the ADD and RS model.
For this the \texttt{customSpin2Prop} Fortran function need to be defined by hand.
The mass terms in the Lorentz structure are neglected.

@d graviton effective propagator
@{@_Id@_ @_once@_ proplorentz(4, k1?, m?, sDUMMY1?, 2, iv1?, iv2?) =
   SplitLorentzIndex(iv1, iv1a, iv1b) *
   SplitLorentzIndex(iv2, iv2a, iv2b) *
   (
        + 1/2 * (
                + (d_(iv1a, iv2a) ) *
                  (d_(iv1b, iv2b) )
                + (d_(iv1a, iv2b) ) *
                  (d_(iv1b, iv2a) )
        )
        - 1/3 * (
                + (d_(iv1a, iv1b) ) *
                  (d_(iv2a, iv2b) )
        )
   ) * customSpin2Prop(k1, m, sDUMMY1);
@}


We have to consider 10 cases:
\begin{itemize}
\item in-/outgoing
\item polarisations $\pm2$, $\pm1$, $0$
\end{itemize}

@d graviton wave functions
@{@<ingoing graviton...@>
@<outgoing graviton...@>@}

Since we have to distinguish two Lorentz indices we use
auxilliary function \texttt{fDUMMY1}
to denote $\epsilon^\mu(k,\lambda)$ and $\epsilon^\ast_\mu(k,\lambda)$
in the ingoing and outgoing case.

@D generic graviton wave functions
@{@_Id@_ @_once@_ @1lorentz(4, ivL4?, k1?, m?) *
      @1(field1?, k1?, +2, k2?, k3?) =
   SplitLorentzIndex(ivL4, ivL2a, ivL2b) *
   fDUMMY1(ivL2a, k1, +1, k2, k3, m) * fDUMMY1(ivL2b, k1, +1, k2, k3, m);
   @_Sum@_ ivL2a, ivL2b;
@_Id@_ @_once@_ @1lorentz(4, ivL4?, k1?, m?) *
      @1(field1?, k1?, +1, k2?, k3?) =
   SplitLorentzIndex(ivL4, ivL2a, ivL2b) *
   1/Sqrt2 * (
      + fDUMMY1(ivL2a, k1, +1, k2, k3, m) * fDUMMY1(ivL2b, k1,  0, k2, k3, m)
      + fDUMMY1(ivL2a, k1,  0, k2, k3, m) * fDUMMY1(ivL2b, k1, +1, k2, k3, m)
   );
   @_Sum@_ ivL2, ivL1;
@_Id@_ @_once@_ @1lorentz(4, ivL4?, k1?, m?) *
      @1(field1?, k1?,  0, k2?, k3?) =
   SplitLorentzIndex(ivL4, ivL2a, ivL2b) *
   1/Sqrt2/Sqrt3 * (
      + fDUMMY1(ivL2a, k1, +1, k2, k3, m) * fDUMMY1(ivL2b, k1, -1, k2, k3, m)
      + fDUMMY1(ivL2a, k1, -1, k2, k3, m) * fDUMMY1(ivL2b, k1, +1, k2, k3, m)
      + 2 * fDUMMY1(ivL2a, k1, 0, k2, k3, m) * fDUMMY1(ivL2b, k1, 0, k2, k3, m)
   );
   @_Sum@_ ivL2, ivL1;
@_Id@_ @_once@_ @1lorentz(4, ivL4?, k1?, m?) *
      @1(field1?, k1?, -1, k2?, k3?) =
   SplitLorentzIndex(ivL4, ivL2a, ivL2b) *
   1/Sqrt2 * (
      + fDUMMY1(ivL2a, k1, -1, k2, k3, m) * fDUMMY1(ivL2b, k1,  0, k2, k3, m)
      + fDUMMY1(ivL2a, k1,  0, k2, k3, m) * fDUMMY1(ivL2b, k1, -1, k2, k3, m)
   );
   @_Sum@_ ivL2, ivL1;
@_Id@_ @_once@_ @1lorentz(4, ivL4?, k1?, m?) *
      @1(field1?, k1?, -2, k2?, k3?) =
   SplitLorentzIndex(ivL4, ivL2a, ivL2b) *
   fDUMMY1(ivL2a, k1, -1, k2, k3, m) * fDUMMY1(ivL2b, k1, -1, k2, k3, m);
   @_Sum@_ ivL2a, ivL2b;
@}




@d ingoing graviton wave functions
@{@<generic graviton wave functions@(inp@)@>
@_Id@_ fDUMMY1(ivL2?, k1?, +1, k2?, k3?, m?) =
   @<expression for massive $\varepsilon(k, +1)$@>;
@_Id@_ fDUMMY1(ivL2?, k1?, 0, k2?, k3?, m?) =
   @<expression for massive $\varepsilon(k, 0)$@>;
@_Id@_ fDUMMY1(ivL2?, k1?, -1, k2?, k3?, m?) =
   @<expression for massive $\varepsilon(k, -1)$@>;@}

@d outgoing graviton wave functions
@{@<generic graviton wave functions@(out@)@>
@_Id@_ fDUMMY1(ivL2?, k1?, +1, k2?, k3?, m?) =
   @<expression for massive $\varepsilon^\ast(k, +1)$@>;
@_Id@_ fDUMMY1(ivL2?, k1?, 0, k2?, k3?, m?) =
   @<expression for massive $\varepsilon^\ast(k, 0)$@>;
@_Id@_ fDUMMY1(ivL2?, k1?, -1, k2?, k3?, m?) =
   @<expression for massive $\varepsilon^\ast(k, -1)$@>;@}

%---#] Spin-2 Particles:
\section{The Colour Part of the propagators}
%---#[ Colour Propagators :
This section is not at the main theme of this document but for
historical reasons these replacement rules are expected in the
file \texttt{propagators.hh}. The colour part of a propagator
for all non-trivial representations is replaced by a Kronecker-$\delta$.
The trivial representation is just ignored.
@d colour part of the propagators
@{@_Id@_ propcolor( 3, iv1?, iv2?) = @_d@__(iv1, iv2);
@_Id@_ propcolor(-3, iv1?, iv2?) = @_d@__(iv1, iv2);
@_Id@_ propcolor( 8, iv1?, iv2?) = @_d@__(iv1, iv2);
@_Id@_ propcolor( 1, iv1?, iv2?) = 1;@}
%---#] Colour Propagators :

\appendix

\section{Index of Symbols}
@u

\section{Index of Macros}
@m

\section{Index of Files}
@f

\begin{thebibliography}{[8]}
\bibitem{1}M.~B\"ohm, A.~Denner, H.~Joos: \textit{GAUGE THEORIES
of the Strong and Electroweak Interaction}, B.~G.~Teubner, Stuttgart,
Leipzig, Wiesbaden, 3rd edition, 2001.
\bibitem{Xu}
  Z.~Xu, D.~H.~Zhang and L.~Chang,
  \textit{Helicity Amplitudes for Multiple Bremsstrahlung
  in Massless Nonabelian Gauge Theories},
  Nucl.\ Phys.\  B {\bf 291} (1987) 392.
  %%CITATION = NUPHA,B291,392;%%
%\cite{Kilian:2007gr}
\bibitem{Kilian:2007gr}
  W.~Kilian, T.~Ohl and J.~Reuter,
  \textit{WHIZARD: Simulating Multi-Particle Processes at LHC and ILC},
  arXiv:0708.4233 [hep-ph].
  %%CITATION = ARXIV:0708.4233;%%
\end{thebibliography}
\end{document}
